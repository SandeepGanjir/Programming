I-O/6.txt
* for 'Anchor' words

	-> 0, 60, 462, 504, 
Compressing	-> 1, 67, 
tries	-> 2, 337, 345, 
When	-> 3, 29, 70, 308, 353, 
the	-> 4, 30, 42, 52, 57, 71, 109, 114, 118, 122, 129, 135, 154, 167, 175, 185, 188, 210, 225, 244, 247, 250, 257, 266, 270, 274, 278, 283, 286, 294, 302, 322, 370, 374, 378, 384, 391, 395, 398, 410, 419, 438, 441, 446, 454, 466, 473, 484, 490, 502, 520, 
trie	-> 5, 20, 31, 53, 106, 136, 256, 323, 376, 397, 411, 427, 503, 514, 
is	-> 6, 45, 48, 63, 77, 180, 227, 305, 310, 324, 428, 435, 451, 499, 
mostly	-> 7, 
static	-> 8, 
i	-> 9, 94, 
e	-> 10, 95, 
all	-> 11, 
insertions	-> 12, 340, 
or	-> 13, 40, 172, 206, 360, 
deletions	-> 14, 342, 
of	-> 15, 74, 97, 124, 132, 169, 187, 212, 253, 262, 282, 293, 373, 380, 386, 400, 440, 510, 522, 
keys	-> 16, 76, 
from	-> 17, 121, 422, 
a	-> 18, 98, 105, 140, 231, 238, 290, 318, 350, 413, 423, 426, 458, 507, 511, 
prefilled	-> 19, 
are	-> 21, 26, 33, 
disabled	-> 22, 
and	-> 23, 28, 148, 162, 214, 241, 264, 301, 338, 341, 362, 377, 430, 477, 
only	-> 24, 
lookups	-> 25, 388, 
needed	-> 27, 126, 193, 217, 
nodes	-> 32, 156, 447, 
not	-> 34, 
keyed	-> 35, 107, 
by	-> 36, 55, 108, 152, 173, 382, 437, 
node	-> 37, 43, 469, 524, 
specific	-> 38, 
data	-> 39, 44, 332, 455, 491, 
if	-> 41, 
common	-> 46, 58, 170, 267, 392, 
it	-> 47, 86, 309, 434, 
possible	-> 49, 151, 432, 481, 
to	-> 50, 90, 127, 194, 201, 218, 229, 272, 317, 357, 366, 406, 408, 425, 444, 452, 488, 500, 516, 
compress	-> 51, 273, 
representation	-> 54, 82, 226, 
merging	-> 56, 265, 
branches	-> 59, 147, 393, 
This	-> 61, 348, 463, 
application	-> 62, 224, 
typically	-> 64, 182, 
used	-> 65, 89, 183, 
for	-> 66, 84, 199, 222, 297, 389, 468, 
lookup	-> 68, 191, 207, 
tables	-> 69, 192, 205, 208, 
total	-> 72, 
set	-> 73, 103, 116, 157, 
stored	-> 75, 
very	-> 78, 141, 232, 494, 
sparse	-> 79, 92, 235, 312, 336, 396, 512, 
within	-> 80, 113, 269, 289, 334, 
their	-> 81, 
space	-> 83, 508, 
example	-> 85, 200, 
may	-> 87, 403, 525, 
be	-> 88, 358, 367, 526, 
represent	-> 91, 202, 
bitsets	-> 93, 
subsets	-> 96, 
much	-> 99, 
fixed	-> 100, 160, 
enumerable	-> 101, 
larger	-> 102, 
using	-> 104, 243, 
bit	-> 110, 
element	-> 111, 134, 
position	-> 112, 131, 288, 
full	-> 115, 
with	-> 117, 144, 159, 
key	-> 119, 252, 279, 442, 
created	-> 120, 
string	-> 123, 251, 
bits	-> 125, 
encode	-> 128, 
integral	-> 130, 
each	-> 133, 280, 298, 314, 523, 
will	-> 137, 259, 
then	-> 138, 242, 260, 
have	-> 139, 
degenerate	-> 142, 
form	-> 143, 439, 
many	-> 145, 
missing	-> 146, 
compression	-> 149, 179, 258, 333, 402, 449, 497, 
becomes	-> 150, 
storing	-> 153, 
leaf	-> 155, 
segments	-> 158, 355, 
length	-> 161, 
combining	-> 163, 215, 
them	-> 164, 
after	-> 165, 
detecting	-> 166, 263, 
repetition	-> 168, 
patterns	-> 171, 
filling	-> 174, 
unused	-> 176, 
gaps	-> 177, 
Such	-> 178, 223, 331, 401, 
also	-> 181, 311, 
in	-> 184, 246, 277, 321, 343, 394, 518, 528, 
implementation	-> 186, 509, 
various	-> 189, 
fast	-> 190, 
retrieve	-> 195, 
Unicode	-> 196, 220, 
character	-> 197, 
properties	-> 198, 
case	-> 203, 
mapping	-> 204, 480, 
containing	-> 209, 
combination	-> 211, 
base	-> 213, 
characters	-> 216, 
support	-> 219, 330, 
normalization	-> 221, 
similar	-> 228, 405, 
transforming	-> 230, 
large	-> 233, 
unidimensional	-> 234, 
table	-> 236, 
into	-> 237, 412, 457, 492, 
multidimensional	-> 239, 
matrix	-> 240, 
coordinates	-> 245, 
hyper	-> 248, 271, 
as	-> 249, 
an	-> 254, 
uncompressed	-> 255, 
consist	-> 261, 
columns	-> 268, 
last	-> 275, 
dimension	-> 276, 281, 296, 315, 
hypermatrix	-> 284, 
stores	-> 285, 
start	-> 287, 
storage	-> 291, 
vector	-> 292, 304, 
next	-> 295, 
coordinate	-> 299, 
value	-> 300, 
resulting	-> 303, 
itself	-> 306, 
compressible	-> 307, 
so	-> 313, 
associated	-> 316, 
layer	-> 319, 
level	-> 320, 
compressed	-> 325, 344, 354, 375, 
separately	-> 326, 
Some	-> 327, 363, 
implementations	-> 328, 
do	-> 329, 
dynamic	-> 335, 
allow	-> 339, 
but	-> 346, 
generally	-> 347, 
has	-> 349, 365, 
significant	-> 351, 
cost	-> 352, 
need	-> 356, 467, 
split	-> 359, 
merged	-> 361, 
tradeoff	-> 364, 
made	-> 368, 
between	-> 369, 
smallest	-> 371, 
size	-> 372, 
speed	-> 379, 
updates	-> 381, 
limiting	-> 383, 
range	-> 385, 
global	-> 387, 
comparing	-> 390, 
result	-> 399, 
look	-> 404, 
trying	-> 407, 
transform	-> 409, 421, 
directed	-> 414, 
acyclic	-> 415, 
graph	-> 416, 
DAG	-> 417, 424, 
because	-> 418, 
reverse	-> 420, 
obvious	-> 429, 
always	-> 431, 
however	-> 433, 
constrained	-> 436, 
chosen	-> 443, 
index	-> 445, 
Another	-> 448, 496, 
approach	-> 450, 464, 498, 
unravel	-> 453, 
structure	-> 456, 
single	-> 459, 
byte	-> 460, 
array	-> 461, 
eliminates	-> 465, 
pointers	-> 470, 
which	-> 471, 482, 519, 
reduces	-> 472, 
memory	-> 474, 479, 486, 493, 529, 
requirements	-> 475, 
substantially	-> 476, 
makes	-> 478, 
allows	-> 483, 
virtual	-> 485, 
manager	-> 487, 
load	-> 489, 
efficiently	-> 495, 
pack	-> 501, 
Liang	-> 505, 
describes	-> 506, 
packed	-> 513, 
applied	-> 515, 
hyphenation	-> 517, 
descendants	-> 521, 
interleaved	-> 527, 
